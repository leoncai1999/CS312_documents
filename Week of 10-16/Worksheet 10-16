Warm-Up:
Re-write this boolean expression in 3 different ways

((x<y) && (y<z)) || z == 0)

1. Write a method rollDoubles that takes a Random
   object as a parameter and that prints information about a dice simulation.
   The method uses the Random object to simulate the rolling of two dice until
   doubles comes up (i.e., until the two numbers that come up are the same).
   Assume we are using standard dice that have six sides numbered 1 through 6.

   Your method should produce a sequence of simulated rolls, printing each
   roll, until the two numbers rolled match (doubles).  The numbers 1 through 6
   should be equally likely to appear for any given roll.  Your method should
   also report the total number of rolls it took to reach doubles.

   For example, if the following two calls are made after constructing a Random
   object:

        Random r = new Random();
        rollDoubles(r);
        rollDoubles(r);

   We expect to get a log of execution like this:

	Next roll = 2, 6
	Next roll = 3, 1
	Next roll = 5, 2
	Next roll = 1, 2
	Next roll = 2, 2
	Doubles after 5 rolls
	
	Next roll = 2, 6
	Next roll = 1, 4
	Next roll = 6, 2
	Next roll = 3, 3
	Doubles after 4 rolls
	
   You must exactly reproduce the format of the log above (including the blank
   lines).

   Write your solution to rollDoubles below.
   
   2. 
     Write a static method called quadrant that takes as
   parameters a pair of double values representing an (x, y) point and that
   returns the quadrant number for that point.  Recall that quadrants are
   numbered as integers from 1 to 4 with the upper-right quadrant numbered 1
   and the subsequent quadrants numbered in a counter-clockwise fashion:

                             ^ y-axis
                             |
                             |
                             |
                 Quadrant 2  |  Quadrant 1
                             |
         x-axis
                             |
                 Quadrant 3  |  Quadrant 4
                             |
                             |
                             |
                             V

   Notice that the quadrant is determined by whether the x and y coordinates
   are positive or negative numbers.  If a point falls on the x-axis or the
   y-axis, then the method should return 0.  Below are sample calls on the
   method.

        Method                  Value          Method                  Value
         Call                  Returned         Call                  Returned
        -------------------------------        -------------------------------
        quadrant(12.4, 17.8)      1            quadrant(0.0, 0.0)        0
        quadrant(-2.3, 3.5)       2            quadrant(12.5, 0.0)       0
        quadrant(-15.2, -3.1)     3            quadrant(0.0, 2.3)        0
        quadrant(4.5, -4.5)       4

   Write your solution to method quadrant below.
   
   3. Please refer to the picture in the folder.
